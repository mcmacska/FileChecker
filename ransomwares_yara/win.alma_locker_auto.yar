rule win_alma_locker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.alma_locker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alma_locker"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 8b4310 83f801 727b 48 3bc1 0f47c1 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8b4310               | mov                 eax, dword ptr [ebx + 0x10]
            //   83f801               | cmp                 eax, 1
            //   727b                 | jb                  0x7d
            //   48                   | dec                 eax
            //   3bc1                 | cmp                 eax, ecx
            //   0f47c1               | cmova               eax, ecx

        $sequence_1 = { e8???????? 59 85c0 0f8450030000 8b8528e5ffff 8b8d24e5ffff 8b0485e86a0210 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   0f8450030000         | je                  0x356
            //   8b8528e5ffff         | mov                 eax, dword ptr [ebp - 0x1ad8]
            //   8b8d24e5ffff         | mov                 ecx, dword ptr [ebp - 0x1adc]
            //   8b0485e86a0210       | mov                 eax, dword ptr [eax*4 + 0x10026ae8]

        $sequence_2 = { c7411000000000 68???????? 668901 e8???????? 83ec18 c684248000000003 }
            // n = 6, score = 100
            //   c7411000000000       | mov                 dword ptr [ecx + 0x10], 0
            //   68????????           |                     
            //   668901               | mov                 word ptr [ecx], ax
            //   e8????????           |                     
            //   83ec18               | sub                 esp, 0x18
            //   c684248000000003     | mov                 byte ptr [esp + 0x80], 3

        $sequence_3 = { 837d1c10 720b ff7508 e8???????? 83c404 837d3410 c6450800 }
            // n = 7, score = 100
            //   837d1c10             | cmp                 dword ptr [ebp + 0x1c], 0x10
            //   720b                 | jb                  0xd
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   837d3410             | cmp                 dword ptr [ebp + 0x34], 0x10
            //   c6450800             | mov                 byte ptr [ebp + 8], 0

        $sequence_4 = { 8b4db8 e9???????? c3 8d4dd4 e9???????? 8d4dbc e9???????? }
            // n = 7, score = 100
            //   8b4db8               | mov                 ecx, dword ptr [ebp - 0x48]
            //   e9????????           |                     
            //   c3                   | ret                 
            //   8d4dd4               | lea                 ecx, dword ptr [ebp - 0x2c]
            //   e9????????           |                     
            //   8d4dbc               | lea                 ecx, dword ptr [ebp - 0x44]
            //   e9????????           |                     

        $sequence_5 = { 85c0 755a 68000000f0 6a18 }
            // n = 4, score = 100
            //   85c0                 | test                eax, eax
            //   755a                 | jne                 0x5c
            //   68000000f0           | push                0xf0000000
            //   6a18                 | push                0x18

        $sequence_6 = { 030c85e86a0210 eb05 b9???????? f6410420 7414 6a02 53 }
            // n = 7, score = 100
            //   030c85e86a0210       | add                 ecx, dword ptr [eax*4 + 0x10026ae8]
            //   eb05                 | jmp                 7
            //   b9????????           |                     
            //   f6410420             | test                byte ptr [ecx + 4], 0x20
            //   7414                 | je                  0x16
            //   6a02                 | push                2
            //   53                   | push                ebx

        $sequence_7 = { 8bcb 83f808 7204 8b3b eb02 8bfb 0fb70471 }
            // n = 7, score = 100
            //   8bcb                 | mov                 ecx, ebx
            //   83f808               | cmp                 eax, 8
            //   7204                 | jb                  6
            //   8b3b                 | mov                 edi, dword ptr [ebx]
            //   eb02                 | jmp                 4
            //   8bfb                 | mov                 edi, ebx
            //   0fb70471             | movzx               eax, word ptr [ecx + esi*2]

        $sequence_8 = { c745d00f000000 c745cc00000000 c645bc00 7219 ff758c e8???????? }
            // n = 6, score = 100
            //   c745d00f000000       | mov                 dword ptr [ebp - 0x30], 0xf
            //   c745cc00000000       | mov                 dword ptr [ebp - 0x34], 0
            //   c645bc00             | mov                 byte ptr [ebp - 0x44], 0
            //   7219                 | jb                  0x1b
            //   ff758c               | push                dword ptr [ebp - 0x74]
            //   e8????????           |                     

        $sequence_9 = { 7409 50 e8???????? 83c404 8b8570ffffff 85c0 7411 }
            // n = 7, score = 100
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b8570ffffff         | mov                 eax, dword ptr [ebp - 0x90]
            //   85c0                 | test                eax, eax
            //   7411                 | je                  0x13

    condition:
        7 of them and filesize < 335872
}