rule win_blackcat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.blackcat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.blackcat"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e9???????? bb02000000 eb0c bb03000000 eb05 bb04000000 01d1 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   bb02000000           | mov                 ebx, 2
            //   eb0c                 | jmp                 0xe
            //   bb03000000           | mov                 ebx, 3
            //   eb05                 | jmp                 7
            //   bb04000000           | mov                 ebx, 4
            //   01d1                 | add                 ecx, edx

        $sequence_1 = { e8???????? 83c404 8b742404 3c04 0f85f4040000 83fe15 720a }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b742404             | mov                 esi, dword ptr [esp + 4]
            //   3c04                 | cmp                 al, 4
            //   0f85f4040000         | jne                 0x4fa
            //   83fe15               | cmp                 esi, 0x15
            //   720a                 | jb                  0xc

        $sequence_2 = { ff742410 50 e8???????? 83c40c 83ff02 89df 895c2440 }
            // n = 7, score = 100
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   83ff02               | cmp                 edi, 2
            //   89df                 | mov                 edi, ebx
            //   895c2440             | mov                 dword ptr [esp + 0x40], ebx

        $sequence_3 = { ebe1 8b442408 897c2458 8944245c 8b442404 e9???????? 68???????? }
            // n = 7, score = 100
            //   ebe1                 | jmp                 0xffffffe3
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   897c2458             | mov                 dword ptr [esp + 0x58], edi
            //   8944245c             | mov                 dword ptr [esp + 0x5c], eax
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   e9????????           |                     
            //   68????????           |                     

        $sequence_4 = { e8???????? 83c40c 89d8 89f1 89da 8975ec 29f0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   89d8                 | mov                 eax, ebx
            //   89f1                 | mov                 ecx, esi
            //   89da                 | mov                 edx, ebx
            //   8975ec               | mov                 dword ptr [ebp - 0x14], esi
            //   29f0                 | sub                 eax, esi

        $sequence_5 = { e8???????? 83c404 8b4c2438 0fb6d3 57 e9???????? 7666 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b4c2438             | mov                 ecx, dword ptr [esp + 0x38]
            //   0fb6d3               | movzx               edx, bl
            //   57                   | push                edi
            //   e9????????           |                     
            //   7666                 | jbe                 0x68

        $sequence_6 = { e8???????? 83c408 3c03 753c 8b4204 89d7 ff32 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   3c03                 | cmp                 al, 3
            //   753c                 | jne                 0x3e
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   89d7                 | mov                 edi, edx
            //   ff32                 | push                dword ptr [edx]

        $sequence_7 = { 8b5dec 8945a0 8d4431ff 8b4df0 8945a4 8b4510 894dbc }
            // n = 7, score = 100
            //   8b5dec               | mov                 ebx, dword ptr [ebp - 0x14]
            //   8945a0               | mov                 dword ptr [ebp - 0x60], eax
            //   8d4431ff             | lea                 eax, dword ptr [ecx + esi - 1]
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8945a4               | mov                 dword ptr [ebp - 0x5c], eax
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   894dbc               | mov                 dword ptr [ebp - 0x44], ecx

        $sequence_8 = { e8???????? 83c404 eb32 a1???????? 894590 c7459400000000 c7459800000000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   eb32                 | jmp                 0x34
            //   a1????????           |                     
            //   894590               | mov                 dword ptr [ebp - 0x70], eax
            //   c7459400000000       | mov                 dword ptr [ebp - 0x6c], 0
            //   c7459800000000       | mov                 dword ptr [ebp - 0x68], 0

        $sequence_9 = { 8b4c2428 8b542424 8908 8b4c240c 894804 8b4c2408 894808 }
            // n = 7, score = 100
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   8b542424             | mov                 edx, dword ptr [esp + 0x24]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]
            //   894804               | mov                 dword ptr [eax + 4], ecx
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   894808               | mov                 dword ptr [eax + 8], ecx

    condition:
        7 of them and filesize < 4604928
}